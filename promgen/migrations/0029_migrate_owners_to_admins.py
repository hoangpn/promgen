# Generated by Django 4.2.11 on 2025-06-10 04:21
from django.contrib.auth import get_user_model
from django.contrib.auth.models import User, Permission
from django.db import migrations
from django.db.models.signals import post_save
from guardian.models import UserObjectPermission

import promgen.signals


def assign_admin_perm_to_owners(apps, schema_editor):
    # In this scenario, Promgen assigns permissions automatically, so Audit Logs are not needed.
    post_save.disconnect(promgen.signals.create_log, sender=UserObjectPermission)
    Farm = apps.get_model("promgen", "Farm")
    Service = apps.get_model("promgen", "Service")
    Project = apps.get_model("promgen", "Project")

    # Assign ADMIN permissions to owners of existing objects
    for farm in Farm.objects.all():
        owner = farm.owner
        UserObjectPermission.objects.create(
            user=User.objects.get(id=owner.id),
            permission=Permission.objects.get(codename="farm_admin"),
            content_object=farm,
        )

    for service in Service.objects.all():
        owner = service.owner
        UserObjectPermission.objects.create(
            user=User.objects.get(id=owner.id),
            permission=Permission.objects.get(codename="service_admin"),
            content_object=service,
        )

    for project in Project.objects.all():
        owner = project.owner
        UserObjectPermission.objects.create(
            user=User.objects.get(id=owner.id),
            permission=Permission.objects.get(codename="project_admin"),
            content_object=project,
        )

    # Re-connected after running the migration
    post_save.connect(promgen.signals.create_log, sender=UserObjectPermission)


class Migration(migrations.Migration):
    dependencies = [
        ("promgen", "0028_alter_farm_options_alter_project_options_and_more"),
    ]

    operations = [migrations.RunPython(assign_admin_perm_to_owners)]
