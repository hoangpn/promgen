# Generated by Django 4.2.11 on 2025-09-08 08:14

from django.db import migrations


def clone_farms(apps, schema_editor):
    # Clone farms that are associated with multiple projects
    # so that each project has its own farm
    for farm in apps.get_model("promgen", "Farm").objects.all():
        project_count = 0
        for project in farm.project_set.all():
            project_count += 1
            if project_count > 1:
                cloned_farm = clone_farm_and_hosts(apps, farm)
                project.farm = cloned_farm
                project.save()


def clone_farm_and_hosts(apps, farm):
    cloned_farm = apps.get_model("promgen", "Farm").objects.get(pk=farm.pk)
    cloned_farm.pk = None
    cloned_farm.save()

    for host in farm.host_set.all():
        cloned_host = host
        cloned_host.pk = None
        cloned_host.farm = cloned_farm
        cloned_host.save()

    return cloned_farm


class Migration(migrations.Migration):
    dependencies = [
        ("promgen", "0031_group"),
    ]

    operations = [
        migrations.AlterUniqueTogether(
            name="farm",
            unique_together=set(),
        ),
        migrations.RunPython(clone_farms),
    ]
